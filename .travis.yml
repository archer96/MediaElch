language: generic

os: linux
dist: bionic

branches:
  only:
  - travis-archer96

services:
  - docker

jobs:
  include:

  #----------------------------------------------------------------------------
  # Check
  # We run some linters and code formatters to check our code base.
  #----------------------------------------------------------------------------

  # Travis CI has integrated ShellCheck by default. This is faster than using
  # cmake with shellcheck target because we don't need to install conan
  # dependencies.
  - name: "shellcheck linting"
    language: shell
    before_script:
      - shellcheck --version
    script:
      - ./scripts/run_shellcheck.sh

  - name: "cmake-format check"
    language: python
    python: '3.8'
    addons: { apt: { packages: ['python3-setuptools', 'python3-pip'] } }
    install:
      - pip install cmake_format
    before_script:
      - cmake-format --version
    script:
      - ./scripts/run_cmake_format.sh
      - git diff --diff-filter=M --color | cat
      - git diff --diff-filter=M --quiet || (echo "Found unformatted CMakeLists.txt! Use cmake-format!"; exit 1)

  - name: "clang-format check"
    dist: focal
    addons: { apt: { packages: ['clang-format-10'] } }
    script:
      - ./scripts/run_clang_format.sh
      - git diff --diff-filter=M --color | cat
      - git diff --diff-filter=M --quiet || (echo "Found unformatted C++ files! Use clang-format!"; exit 1)

  - name: "cppcheck linting"
    dist: focal
    addons: { apt: { packages: ['cppcheck'] } }
    before_script:
      - cppcheck --version
    script:
      # Currently allow cppcheck to fail due to false positives
      - ./scripts/run_cppcheck.sh || echo "Failed"

  #----------------------------------------------------------------------------
  # Build & Test
  # Build and test our application on macOS and linux. All stages have the
  # script job in common (see end of this yml).
  #----------------------------------------------------------------------------

  - name: "macOS build"
    env: QT=qtMac CXX=clang++ CC=clang MEDIAINFO_VERSION=20.09
    os: osx
    osx_image: xcode12.2
    addons:
      homebrew:
        packages:
        - cmake
        - qt5
        - svn
        update: true
    install:
      # Download MediaInfo & ZenLib
      - wget --output-document MediaInfo_DLL.tar.bz2
        https://mediaarea.net/download/binary/libmediainfo0/${MEDIAINFO_VERSION}/MediaInfo_DLL_${MEDIAINFO_VERSION}_Mac_i386+x86_64.tar.bz2
      - tar -xvjf MediaInfo_DLL.tar.bz2
      - mv MediaInfoLib/libmediainfo.0.dylib ./
      # The developer folder has a typo: Developpers
      - mv MediaInfoLib/Develo*ers/Include/MediaInfoDLL MediaInfoDLL
      - rm -rf MediaInfoLib
      - rm MediaInfo_DLL.tar.bz2
      - svn checkout https://github.com/MediaArea/ZenLib/trunk/Source/ZenLib
    before_script:
      - export PATH="/usr/local/opt/qt/bin:$PATH"
      - mkdir build && cd build
      - qmake --version
      - qmake ../MediaElch.pro CONFIG+=release
    script:
      - make -j 2
    after_success:
      - "${TRAVIS_BUILD_DIR}/travis-ci/package.sh"

  #----------------------------------------------------------------------------

  - name: "Linux Qt 5.12 build"
    env: QT=qt512 QT_PPA=qt-5.12.3 CXX=g++ CC=gcc
    os: linux
    dist: bionic
    install:
      - "travis-ci/install_dependencies.sh"
    before_script:
      - export PATH="/opt/${QT}/bin:$PATH"
      - mkdir build && cd build
      - qmake --version
      - qmake ../MediaElch.pro CONFIG+=release
    script:
      - make -j 2
    after_success:
      - "${TRAVIS_BUILD_DIR}/travis-ci/package.sh"

  #----------------------------------------------------------------------------

  - name: "Linux Qt 5.6 build"
    env: QT=qt56 QT_PPA=qt563 CXX=g++ CC=gcc
    os: linux
    dist: bionic
    install:
      - "travis-ci/install_dependencies.sh"
    before_script:
      - export PATH="/opt/${QT}/bin:$PATH"
      - mkdir build && cd build
      - qmake --version
      - qmake ../MediaElch.pro CONFIG+=release
    script:
      - make -j 2

  #----------------------------------------------------------------------------

  - name: "Windows MXE Build"
    os: linux
    dist: bionic
    before_install:
      - docker pull archer96/mediaelch-mxe-qt:latest
    script:
      - docker run --rm --user "$(id -u "$(whoami)"):$(id -g "$(whoami)")"
          -v ${TRAVIS_BUILD_DIR}:/src archer96/mediaelch-mxe-qt:latest
            /bin/bash -xc "cd /src && ./travis-ci/win/build_windows.sh"
    after_success:
      - if [[ "$TRAVIS_PULL_REQUEST" = "false" && "${TRAVIS_BRANCH}" = "master" ]]; then
          docker run --rm --user "$(id -u "$(whoami)"):$(id -g "$(whoami)")"
            -v ${TRAVIS_BUILD_DIR}:/src archer96/mediaelch-mxe-qt:latest
              /bin/bash -xc "cd /src && ./travis-ci/win/package_windows.sh";
          ${TRAVIS_BUILD_DIR}/travis-ci/win/prepare_bintray_windows.sh;
        fi

  #----------------------------------------------------------------------------

  - name: "Ubuntu 18.04 with Qt 5.14.1 | build + tests + coverage"
    os: linux
    dist: bionic
    services:
      - xvfb
    addons:
      apt:
        sources:
          - sourceline: ppa:ubuntu-toolchain-r/test
          - sourceline: ppa:beineri/opt-qt-5.14.1-bionic
        packages:
          - lcov
          - mesa-common-dev
          - libgl1-mesa-dev
          - python3-setuptools
          - python3-pip
          - ninja-build
          - libcurl4-gnutls-dev
          - libmediainfo-dev
          - libpulse-dev
          - zlib1g-dev
          - libzen-dev
          # Qt dependencies
          - qt514base
          - qt514multimedia
          - qt514declarative
          - qt514quickcontrols
          - qt514wayland
          - qt514x11extras
          - qt514serialbus
    install:
      - pip3 install --upgrade pip setuptools
      - pip3 install --user cmake --upgrade
    before_script:
      - export PATH="/opt/${QT}/bin:$PATH"
      - mkdir build && cd build
      - cmake .. -DCMAKE_BUILD_TYPE=Debug -DENABLE_COVERAGE=ON -DDISABLE_UPDATER=ON -GNinja
    script:
      - ninja
      - ninja coverage
    after_success:
      - bash <(curl -s https://codecov.io/bash) -f coverage-filtered.info || echo "Codecov did not collect coverage reports"

#----------------------------------------------------------------------------
# Deploy
# Nightly builds are uploaded to bintray.com
#----------------------------------------------------------------------------

deploy:
- provider: bintray
  skip_cleanup: true
  on:
    branch: travis-archer96
    condition: -f ${TRAVIS_BUILD_DIR}/travis-ci/bintray.json
  user: bugwelle
  key:
    secure: r+LUmf0cgZsXBlYnlCmQZslST1G9gsVcPh82ZyOaMwSwJ+jmreBzAlrJSNqphlhbtWgp09ur9tNy7aJ6J/3jzS5IJw4XegnYEzkPxefL9ABgKrsaFZReTXCFgatctQVnuV2wX8l8Ng1UpcEXJu93CVx5va0KjYWAeQ++xdsFdF2yubxlHHso/ml8mpNZddxYBz/kRLhfCeZICcptp++YyEVU1/LwOoNFQ+fRrU11HuCRBos/CARRb/cA5rdxoSHAlEsBGPsJmMRplLQZdIrRMiy4eTzkx15tM6zEW0aFnm3fwNiA09Qsqxaho9kv8eh/ecwObfXyRG+MRZ5dKG6MCgFZ2EGyOx3g4cJdqhwT/09b3eVfMNZmBuN2ymGpOtyjYLDsly001IWS5OdYZz8TwJGQgj8qA8mIQgzG1mKDqVxFK+LoAyzCJr4QRfJAjRSKGFAg8waY6BFjE66qhRl+xbKrRKhWJ3putyZg5sMhQ+hVe4IEsyk8nNcB4UxgYbIi6ilclC6+a20eCnLKo0KfTtHV8YqoE0H/t/tRLcSnsR8teY1CHKqZQwnEsZ0dC/nkXCiv3+yJc4cNxvw40TpbPXMlCE3T6eaBP9vFnn0zeGC5yqMtYDPwd7ISNDHPLM3jVW3Ju/41V6h4gNhFZiU+ovk6nu4emvolEPTcM1p1QV0=
  file: ${TRAVIS_BUILD_DIR}/travis-ci/bintray.json
- provider: script
  script: bash scripts/package/package.sh linux launchpad --no-confirm
  on:
    branch: travis-archer96
    condition: $QT = qt510
